{{#extend "scripts"}}

    <script>


        function join(soireeId){
            $.ajax({url: '/testing/joinSoiree', method : "POST", data: {"soireeId" : soireeId}})
                    .done(function(){
                        alert("Succeeded");

//                        var button = document.getElementById(soireeId);
//                        button.onclick = null;
//                        button.innerText = "Joined";
                        location.reload(true);

                    }).fail(function(err){
                       alert("Failed: " + err);
                     });
        };

        function endSoiree(soireeId){
            $.ajax({url: '/testing/endSoiree', method : "GET", data: {"soireeId" : soireeId}})
                    .done(function(){
                        alert("Succeeded");
                        location.reload(true);

                    }).fail(function(err){
                        alert("Failed: " + err);
                    });
        };

        function startSoiree(soireeId){
            $.ajax({url: '/testing/startSoiree', method : "GET", data: {"soireeId" : soireeId}})
                    .done(function(){
                        alert("Succeeded");
                        location.reload(true);

                    }).fail(function(err){
                        alert("Failed: " + err);
                    });
        };

        function openSoiree(soireeId){
            $.ajax({url: '/testing/openSoiree', method : "GET", data: {"soireeId" : soireeId}})
                    .done(function(){
                        alert("Succeeded");
                        location.reload(true);

                    }).fail(function(err){
                        alert("Failed: " + err);
                    });
        };

        function showSoireeInProgress(soireeId){
            var url = "/testing/showInProgress?soireeId=" + soireeId + "&userId=" + '{{_user.userId}}';
            var win = window.open(url, '_blank');
            win.focus();
        };

        function remindSoiree(soireeId){
            $.ajax({url: '/testing/remindSoiree', method : "GET", data: {"soireeId" : soireeId}})
                    .done(function(){
                        alert("Succeeded");
                        location.reload(true);

                    }).fail(function(err){
                        alert("Failed: " + err);
                    });
        };

        function cancelSoiree(soireeId){
            $.ajax({url: '/testing/cancelSoiree', method : "GET", data: {"soireeId" : soireeId}})
                    .done(function(){
                        alert("Succeeded");
                        location.reload(true);

                    }).fail(function(err){
                        alert("Failed: " + err);
                    });
        };

        function deleteSoirees(){
            $.ajax({
                url: '/testing/deleteSoirees',
                method : 'GET',
                success: function(){
                    location.reload(true);
                },
                error: function(err){
                    alert("Error: " + err);
                }
            });
        };

        function createSoirees(){
            $.ajax({
                url: '/testing/createSoirees',
                method : 'GET',
                success: function(){
                    location.reload(true);
                },
                error: function(err){
                    alert("Error: " + err);
                }
            });
        };

        function createSoireeForSchedulerRun(){
            $.ajax({
                url: '/testing/createSoireeForSchedulerRun',
                method : 'GET',
                success: function(){
                    location.reload(true);
                },
                error: function(err){
                    alert("Error: " + err);
                }
            });
        };

        function createPost(){
            var text = $("#newPost").val()
            $.ajax({
                url: '/testing/createPost',
                method : 'POST',
                data : {text : text},
                success: function(){
                    location.reload(true);
                },
                error: function(err){
                    alert("Error: " + err);
                }
            });
        };

        function addComment(postId){
            var idString = "#" + postId + "comment";
            var text = $(idString).val();

            $.ajax({
                url: '/testing/createComment',
                method : 'POST',
                data : {text : text, postId : postId},
                success: function(){
                    location.reload(true);
                },
                error: function(err){
                    alert("Error: " + err);
                }
            });
        };

        function switchUser(userId){
            $.ajax({
                url: '/testing/switchTestUser',
                method : 'POST',
                data : {userId : userId},
                success: function(){
                    location.reload(true);
                },
                error: function(err){
                    alert("Error: " + err);
                }
            });
        };

        function deleteUsers(){
            $.ajax({
                url: '/testing/deleteUsers',
                method : 'GET',
                success: function(){
                    location.reload(true);
                },
                error: function(err){
                    alert("Error: " + err);
                }
            });
        };

        function deleteShady(){
            $.ajax({
                url: '/testing/deleteShady',
                method : 'GET',
                success: function(){
                    location.reload(true);
                },
                error: function(err){
                    alert("Error: " + err);
                }
            });
        };

        function createSSJobs(){
            $.ajax({
                url: '/testing/createScheduledSoireeJobs',
                method : 'GET',
                success: function(){
                    location.reload(true);
                },
                error: function(err){
                    alert("Error: " + err);
                }
            });
        };

        function performSSJobs(){
            $.ajax({
                url: '/testing/performScheduledSoireeJobs',
                method : 'GET',
                success: function(){
                    location.reload(true);
                },
                error: function(err){
                    alert("Error: " + err);
                }
            });
        };

        function createBusiness(){
            $.ajax({
                url: '/testing/createBusiness',
                method : 'GET',
                success: function(){
                    location.reload(true);
                },
                error: function(err){
                    alert("Error: " + err);
                }
            });
        }

        function deleteEverything(){
            $.ajax({
                url: '/testing/deleteEverything',
                method : 'GET',
                success: function(){
                    location.reload(true);
                },
                error: function(err){
                    alert("Error: " + err);
                }
            });
        }

        function refreshUsers(){
            $.ajax({
                url: '/testing/refreshUsers',
                method : 'GET',
                success: function(){
                    location.reload(true);
                },
                error: function(err){
                    alert("Error: " + err);
                }
            });
        }

        function createSoireeWithDate(){
            var date = $("#soireeDate").val();

            $.ajax({
                url: '/testing/createSoiree',
                method : 'POST',
                data : {date : date},
                success: function(){
                    location.reload(true);
                },
                error: function(err){
                    alert("Error: " + err);
                }
            });
        }

        function testNotification(){
            $.ajax({
                url: '/testing/testNotification',
                method : 'GET',
                success: function(){
                    location.reload(true);
                },
                error: function(err){
                    alert("Error: " + err);
                }
            });
        }

    </script>

{{/extend}}

<button onclick='deleteSoirees()'> Delete Soirees </button>
<button onclick='createSoirees()'> Create Soirees </button>
<button onclick='createSoireeForSchedulerRun()'> Create Soiree For Next Scheduler Run </button>
<button onclick='createSSJobs()'> Create SSJobs </button>
<button onclick='createBusiness()'> Create Business </button>
<button onclick='performSSJobs()'> Perform SSJobs </button>
<button onclick='deleteUsers()'> Delete Users </button>
<button onclick='deleteShady()'> Delete Shady </button>
<button onclick='deleteEverything()'> Delete Everything </button>
<button onclick='refreshUsers()'> Refresh Users </button>


<div>
    <br />
    <p>User Selected: {{_user.firstName}} {{_user.lastName}}</p>
    <img src="{{_user.profilePictureUrl}}" style="width:100px; height: 100px;" />

    <button onclick='testNotification()'> Test Notification </button>

    <ul>
        <li>_currentReservations : [{{#each _user._currentReservations}} &nbsp;&nbsp; {{this.reservationId}} &nbsp;&nbsp;| {{/each}}]</li>
        <li>_pastReservations : [{{#each _user._pastReservations}}&nbsp;&nbsp; {{this.reservationId}} &nbsp;&nbsp;|{{/each}}]</li>
        <li>_notifications : [{{#each _user._notifications}}&nbsp;&nbsp;{{this.notificationId}}&nbsp;&nbsp;|{{/each}}]</li>
        <li>_unreadNotifications : [{{#each _user._unreadNotifications}}&nbsp;&nbsp;{{this.notificationId}}&nbsp;&nbsp;|{{/each}}]</li>
        <li>verified: {{_user.verified}}</li>
        <li>pending verification: {{_user.pendingVerification}}</li>
    </ul>



    {{#each _testUsers}}
        <button onClick="switchUser('{{this._id}}')">Switch to {{this.firstName}} {{this.lastName}}</button>
    {{/each}}
</div>



<h1> Soirees </h1>
<!--<form action="createSoiree" method="post">-->
    <h4> Create Soiree with Date (ex: 8:50 PM) </h4>
    <input type="text" name="date" placeholder="Date" id="soireeDate"/> <br />
    <button onclick="createSoireeWithDate()"> Create </button>
<!--</form>-->

<ul id="soirees">
    {{#each soirees}}
        <h2> Set of Soirees </h2>
        {{#each this}}
             <li>
                 {{this.soireeId}} : {{this.soireeType}} at {{this._business.businessName}} at {{this.scheduledStartTimeIdentifier}} -
                {{#if this.userAlreadyJoined}}
                    <button> Joined </button>
                {{else}}
                    <button onclick="join('{{this.soireeId}}')" id="{{this.soireeId}}"> Join </button>
                {{/if}}
                 {{#if this.openToUsers}}
                     <button onclick="showSoireeInProgress('{{this.soireeId}}')"> Show In Progress </button>
                 {{else}}
                     <button onclick="openSoiree('{{this.soireeId}}')"> Open </button>

                 {{/if}}
                 {{#if this.started}}
                     <button onclick="endSoiree('{{this.soireeId}}')"> End </button>
                 {{else}}

                     <button onclick="startSoiree('{{this.soireeId}}')"> Start </button>
                     {{#if this.cancelled}}
                     <button> Cancelled </button>
                     {{else}}
                     <button onclick="cancelSoiree('{{this.soireeId}}')"> Cancel </button>
                     {{/if}}
                 {{/if}}

                 <button onclick="remindSoiree('{{this.soireeId}}')"> Remind Users </button>


                 <div>
                     <ul>
                         <li>numUsersMax : {{this.numUsersMax}}</li>
                         <li>_usersAttending ({{this._usersAttending.length}}): [{{#each this._usersAttending}} {{this.firstName}} {{this.lastName}}, {{/each}}]</li>
                         <li>_usersUncharged ({{this._usersUncharged.length}}): [{{#each this._usersUncharged}} {{this.firstName}} {{this.lastName}}, {{/each}}]</li>
                         <li>_unchargedReservations ({{this._unchargedReservations.length}}): [ {{#each this._unchargedReservations}} {{this.reservationId}} ({{this._user.fullName}}) {{/each}} ]</li>
                         <li>_chargedReservations ({{this._chargedReservations.length}}): [ {{#each this._chargedReservations}} {{this.reservationId}} ({{this._user.fullName}} - {{this.confirmationCode}} - confirmed: {{this.confirmed}}) {{/each}} ]</li>
                         <li> startTimeIdentifier : {{this.scheduledStartTimeIdentifier}} </li>
                         <li> endTimeIdentifier : {{this.scheduledEndTimeIdentifier}} </li>

                     </ul>
                 </div>
             </li>
        {{/each}}
    {{/each}}
</ul>



<h1> Posts </h1>

<div id="makePost">
    <textarea id="newPost" style="height:100px; width: 200px;"></textarea>
    <button onclick="createPost()">Post </button>
</div>


<ul id="posts">
    {{#each posts}}
        <li>
            POST:"{{this.text}}" <br />
            by: {{this._user.fullName}} <br />
            postId : {{this.postId}}
          <ul>
                  {{#each this._comments}}
                  <li>
                      {{this._user.fullName}} : '{{this.text}}'
                  </li>
                  {{/each}}

                  <input type="text" id="{{this.postId}}comment" />
                  <button onclick="addComment('{{this.postId}}')"> Comment</button>


          </ul>
        </li>
    {{/each}}
</ul>



