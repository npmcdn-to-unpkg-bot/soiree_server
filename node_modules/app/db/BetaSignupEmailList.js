var mongoose = require('./mongoose_connect.js');
var Schema = mongoose.Schema;
var ObjectId = Schema.Types.ObjectId;


/* Other Models */
var Business = require('./Business.js');
var User = require('./User.js');
var Soiree = require('./Soiree.js');
/* Packages */
var shortid = require('shortid');
var _ = require("underscore");

/* Helper */
var helpersFolderLocation = "../helpers/";
var DateHelper = require(helpersFolderLocation + 'DateHelper.js');
var ResHelper = require(helpersFolderLocation + 'ResHelper.js');
var CreditCardHelper = require(helpersFolderLocation + 'CreditCardHelper.js');
var LocationHelper = require(helpersFolderLocation + 'LocationHelper.js');
var PushNotificationHelper = require(helpersFolderLocation + 'PushNotificationHelper.js');

var ErrorCodes = require(helpersFolderLocation + 'ErrorCodes.js');


var customSchema = new Schema({
        emails: [{type: String}]
    },
    {timestamps: {createdAt: 'dateCreated', updatedAt: 'dateUpdated'}}
);

customSchema.statics.findList = function(successCallback, errorCallback){
    this.findOne({}, function(err, list){
        if (err || !list){
            return errorCallback("MongoError");
        }
        else{
            successCallback(list);
        }
    });
};

customSchema.statics.addEmail = function(email, successCallback, errorCallback){
    this.findList(function(list){
        list.addEmail(email, successCallback, errorCallback);
    }, errorCallback);
};

customSchema.methods.addEmail = function(email, successCallback, errorCallback){
    if (this.emails.indexOf(email) !== -1){
        return errorCallback("EmailExists");
    }
    this.emails.push(email);
    this.save(function(err, list){
        if (err){
            errorCallback("MongoError");
        }
        else{
            console.log("Signed up email: " + email);
            successCallback();
        }
    });
};

customSchema.virtual('').get(function () {
});


customSchema.pre("save", function (next) {
    next();
});

customSchema.post("init", function (soiree) {

});

var deepPopulate = require('mongoose-deep-populate')(mongoose);
var options = {};
customSchema.plugin(deepPopulate, options);

module.exports = mongoose.model('CustomSchema', customSchema);