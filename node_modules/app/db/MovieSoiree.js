var mongoose = require('app/db/mongoose_connect.js');
var Schema = mongoose.Schema;
var ObjectId = Schema.Types.ObjectId;
var Soiree = require('app/db/Soiree.js');

/* Packages */
var shortid = require('shortid');
var _ = require("underscore");
var util = require('util');

/* Helper */
var helpersFolderLocation = "app/helpers/";
var ArrayHelper = require(helpersFolderLocation + 'ArrayHelper.js');

var DateHelper = require(helpersFolderLocation + 'DateHelper.js');
var ResHelper = require(helpersFolderLocation + 'ResHelper.js');
var CreditCardHelper = require(helpersFolderLocation + 'CreditCardHelper.js');
var LocationHelper = require(helpersFolderLocation + 'LocationHelper.js');
var PushNotificationHelper = require(helpersFolderLocation + 'PushNotificationHelper.js');
var Globals = require('app/helpers/Globals.js');
var ErrorCodes = require(helpersFolderLocation + 'ErrorCodes.js');

var customSchema = new Schema({
    movieName: {type: String, required: true}
},
    {
        discriminatorKey: '_type'
    });

    customSchema.methods.jsonObject = function (user) {
        var obj = Soiree.schema.methods.jsonObject.call(this, user);
        obj.title = this.movieName;

        return obj;
    };

    customSchema.virtual('').get(function () {
    });


    customSchema.pre("save", function (next) {
        next();
    });

    customSchema.post("init", function (soiree) {

    });

    customSchema.statics.createMovieSoiree = function (soireeData, successCallback, errorCallback, options) {
        if (!options) options = {};

        var MovieSoiree = this;

        var soireeType = "movie";
        var soiree;
        if(options.date){
            soiree = new MovieSoiree(soireeData);
            soiree.soireeType = soireeType;
            soiree.date = options.date;
        }
        else {
            MovieSoiree.determineDateForSoireeType(soireeType, function (date) {
                if (!date) return errorCallback(ErrorCodes.NoAvailableDate);

                soiree = new MovieSoiree(soireeData);

                soiree.soireeType = soireeType;
                soiree.date = date;
            });
        }
        MovieSoiree.setSoireeDefaults(soiree, successCallback, errorCallback, options);
    };
//}
//rs
//function MovieSoireeSchema(){
//    this.call(this);
//}

//util.inherits(MovieSoireeSchema, Soiree.constructor);

//var customSchema = new MovieSoireeSchema();


module.exports = Soiree.discriminator('MovieSoiree', customSchema);