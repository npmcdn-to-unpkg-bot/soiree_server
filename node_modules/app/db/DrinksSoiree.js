var mongoose = require('app/db/mongoose_connect.js');
var Schema = mongoose.Schema;
var ObjectId = Schema.Types.ObjectId;
var Soiree = require('app/db/Soiree.js');

/* Packages */
var shortid = require('shortid');
var _ = require("underscore");

/* Helper */
var helpersFolderLocation = "app/helpers/";
var ArrayHelper = require(helpersFolderLocation + 'ArrayHelper.js');

var DateHelper = require(helpersFolderLocation + 'DateHelper.js');
var ResHelper = require(helpersFolderLocation + 'ResHelper.js');
var CreditCardHelper = require(helpersFolderLocation + 'CreditCardHelper.js');
var LocationHelper = require(helpersFolderLocation + 'LocationHelper.js');
var PushNotificationHelper = require(helpersFolderLocation + 'PushNotificationHelper.js');
var Globals = require('app/helpers/Globals.js');
var ErrorCodes = require(helpersFolderLocation + 'ErrorCodes.js');

var currTitleIndex = 0;

var customSchema = new Schema({

    },

    {
        discriminatorKey: '_type'
    }
);

customSchema.methods.jsonObject = function (user) {
    var obj = Soiree.schema.methods.jsonObject.call(this, user);


    return obj;
};

//customSchema.virtual('').get(function () {
//});
//
//
//customSchema.pre("save", function (next) {
//    next();
//});
//
//customSchema.post("init", function (soiree) {
//
//});

customSchema.statics.createDrinksSoiree = function(successCallback, errorCallback, options) {
    if (!options) options = {};

    var DrinksSoiree = this;
    var titles = ["3 Hour Open Bar", "Trivia Night", "Tequila Tuesday Sombrero Party", "Hookah with Friends", "Old School Barcade Night"];
    var title = currTitleIndex < titles.length ? titles[currTitleIndex] : titles[currTitleIndex % titles.length];
    currTitleIndex++;

    var soireeType = "drinks";
    var soiree;

    console.log("creating drinks soiree....");

    if(options.date) {
        soiree = new DrinksSoiree({
            soireeType: soireeType,
            date: options.date,
            title: options.title ? options.title : title
        });
        DrinksSoiree.setSoireeDefaults(soiree, successCallback, errorCallback, options);
    }
    else{
            DrinksSoiree.determineDateForSoireeType(soireeType, function(date){
                if (!date) return errorCallback(ErrorCodes.NoAvailableDate);

                soiree = new DrinksSoiree({
                    soireeType: soireeType,
                    date: date,
                    title : title
                });
                DrinksSoiree.setSoireeDefaults(soiree, successCallback, errorCallback, options);
            });
        }
   };

//customSchema.statics.setSoireeDefaults = function(soiree, successCallback, errorCallback, options){
//    if (!soiree.restrictions || soiree.restrictions.length === 0){
//        soiree.restrictions = ["drinking_age"];
//    }
//
//    Soiree.schema.methods.jsonObject.call(this, soiree, successCallback, errorCallback, options);
//
//};


module.exports = Soiree.discriminator('DrinksSoiree', customSchema);