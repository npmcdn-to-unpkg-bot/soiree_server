var mongoose = require('app/db/mongoose_connect.js');
var Schema = mongoose.Schema;
var ObjectId = Schema.Types.ObjectId;


/* Packages */
var shortid = require('shortid');
var _ = require("underscore");

/* Helper */
var helpersFolderLocation = "app/helpers/";
var ArrayHelper = require(helpersFolderLocation + 'ArrayHelper.js');

var DateHelper = require(helpersFolderLocation + 'DateHelper.js');
var ResHelper = require(helpersFolderLocation + 'ResHelper.js');
var CreditCardHelper = require(helpersFolderLocation + 'CreditCardHelper.js');
var LocationHelper = require(helpersFolderLocation + 'LocationHelper.js');
var PushNotificationHelper = require(helpersFolderLocation + 'PushNotificationHelper.js');
var Globals = require('app/helpers/Globals.js');
var ErrorCodes = require(helpersFolderLocation + 'ErrorCodes.js');
var IDGeneratorHelper = require('app/helpers/IDGeneratorHelper');

var customSchema = new Schema({
        confirmationCodes : [{confirmationCode: String, email: String}]
    },
    {timestamps: {createdAt: 'dateCreated', updatedAt: 'dateUpdated'}}
);

function checkIfCodeUnique(code, list){
    for(var i = 0; i < list.confirmationCodes.length; i++){
        var obj = list.confirmationCodes[i];
        if (obj.confirmationCode === code){
            return false;
        }
    }
    return true;
}

customSchema.statics.createConfirmationCode = function(email, successCallback, errorCallback){
    var ConfirmationCodesList = this;

    this.getList(function(list){

        var code = IDGeneratorHelper.generateId(3);
        while(!checkIfCodeUnique(code, list)){
            code = IDGeneratorHelper.generateId(3);
        }

        var obj = {confirmationCode : code, email : email};

        var updateQuery = { $addToSet : {confirmationCodes : obj} };


        ConfirmationCodesList.findOneAndUpdate({}, updateQuery, {new : true}).exec();

        return successCallback(code);

    }, errorCallback);
};

customSchema.statics.getList = function(successCallback, errorCallback){
    var ConfirmationCodesList = this;

    this.findOne({}).exec(function(err, list){
        if (err){
            console.log(err);
            errorCallback();
        }
        else{
            if (!list){
                var list = new ConfirmationCodesList();
                list.save();
                successCallback(list);
            }
            else successCallback(list);
        }
    });
};

customSchema.virtual('').get(function () {
});


customSchema.pre("save", function (next) {
    next();
});

customSchema.post("init", function (doc) {

});

var deepPopulate = require('mongoose-deep-populate')(mongoose);
var options = {};
customSchema.plugin(deepPopulate, options);

module.exports = mongoose.model('ConfirmationCodesList', customSchema);